
resources:
  containers:
  - container: fedora-32
    image: fedora:32
  - container: fedora-33
    image: fedora:33
  - container: fedora-rawhide
    image: fedora:rawhide

jobs:
  - job: Test
    timeoutInMinutes: 30
    pool:
      vmImage: 'Ubuntu-16.04'
    strategy:
      matrix:
        2.1-fedora-32:
          containerResource: fedora-32
          DOTNET_VERSION: 2.1
        2.1-fedora-33:
          containerResource: fedora-33
          DOTNET_VERSION: 2.1
        2.1-fedora-rawhide:
          containerResource: fedora-rawhide
          DOTNET_VERSION: 2.1
        3.1-fedora-32:
          containerResource: fedora-32
          DOTNET_VERSION: 3.1
        3.1-fedora-33:
          containerResource: fedora-33
          DOTNET_VERSION: 3.1
        3.1-fedora-rawhide:
          containerResource: fedora-rawhide
          DOTNET_VERSION: 3.1

    container: $[ variables['containerResource'] ]

    steps:
    - bash: |
        set -euo pipefail
        set -x
        cat /etc/os-release
        if grep Fedora /etc/os-release && [[ "${DOTNET_VERSION}" == "2.1" ]]; then
          sudo dnf install 'dnf-command(copr)' -y
          sudo dnf copr enable @dotnet-sig/dotnet -y
        fi
        sudo dnf install git python3 dotnet-sdk-${DOTNET_VERSION} wget $(grep "^Dependencies: " README.md | sed "s/Dependencies: //") -y
        wget -q https://github.com/redhat-developer/dotnet-bunny/releases/latest/download/turkey-x86_64 -O turkey && chmod +x ./turkey
        ./turkey --version
        ### HACK
        rm -rf debugging-sos-lldb* createdump-aspnet # debugging/coredumps via ptrace don't work in these locked down contianers
        pushd hardened-binaries
        set +e
        ./test.sh
        set -e
        popd
        mkdir -p logs/
        ./turkey -v -l logs/
      displayName: Run tests using turkey

    - task: PublishTestResults@2
      inputs:
        failTaskOnFailedTests: true
        testResultsFiles: '**/results.xml'
        searchFolder: logs/
      condition: always()
